# Задача 34:   Винни-Пух попросил Вас посмотреть, есть ли в его стихах ритм. Поскольку разобраться 
# в его кричалках не настолько просто, насколько легко он их придумывает, 
# Вам стоит написать программу. Винни-Пух считает, что ритм есть, если число слогов 
# (т.е. число гласных букв) в каждой фразе стихотворения одинаковое. Фраза может состоять из одного слова, 
# если во фразе несколько слов, то они разделяются дефисами. Фразы отделяются друг от друга пробелами. 
# Стихотворение  Винни-Пух вбивает в программу с клавиатуры. 
# В ответе напишите “Парам пам-пам”, если с ритмом все в порядке и “Пам парам”, если с ритмом все не в порядке

#*Пример:*

#**Ввод:** пара-ра-рам рам-пам-папам па-ра-па-да    
#    **Вывод:** Парам пам-пам  

#def rhythm(str):
#    str = str.split()
#    list_1 = []
#    for word in str:
#        sum_w = 0
#        for i in word:
#            if i in 'аеёиоуыэюя':
#                sum_w += 1
#        list_1.append(sum_w)
#    return len(list_1) == list_1.count(list_1[0])


#str_1 = 'пара-ра-рам рам-пам-папам па-ра-па-дам'
#if rhythm(str_1):
#    print('Парам пам-пам')
#else:
#    print('Пам парам')

## №2

str_1 = 'пара-ра-рам рам-пам-папам па-ра-па-дам'
if rhythm(str_1):
    print('Парам пам-пам')
else:
    print('Пам парам')

list1 = 'пара-ра-рам рам-пам-папам па-ра-па-дам Парам пам-пам'
sounds = [ 'у', 'е', 'ы', 'а', 'о', 'э','я', 'и', 'ю', 'ё', 'й' ]
phrases = list1.split()
sounds_list = []
for word in phrases:
    sounds_list.append(len([sym for sym in word if sym in sounds]))
if sounds_list.count(sounds_list[0]) == len(sounds_list):
    print('Парам пам-пам')
else:
    print('Пам парам')






# Задача 36: Напишите функцию print_operation_table(operation, num_rows=6, num_columns=6), 
# которая принимает в качестве аргумента функцию, вычисляющую элемент по номеру строки и столбца. 
# Аргументы num_rows и num_columns указывают число строк и столбцов таблицы, которые должны быть распечатаны. 
# Нумерация строк и столбцов идет с единицы (подумайте, почему не с нуля). 
# Примечание: бинарной операцией называется любая операция, у которой ровно два аргумента, как, например, у операции умножения.
# *Пример:*

# **Ввод:** `print_operation_table(lambda x, y: x * y) `
# **Вывод:**

# 1 2 3 4 5 6
# 2 4 6 8 10 12
# 3 6 9 12 15 18
# 4 8 12 16 20 24
# 5 10 15 20 25 30
# 6 12 18 24 30 36

#def print_operation_table(operation, num_rows=6, num_columns=6):
#    for i in range(1, num_rows+1):
 #       for j in range(1, num_columns+1):
#            print("%2d" %operation(i,j), end=' ')
#        print()
#print_operation_table(lambda x, y:x*y)

## №2

def print_operation_table(func, x, y):
    lst = [[0]*y for _ in range(x)]
    for i in range(x):
        for j in range(y):
            lst[i][j] = func(i+1, j+1)
    for i in range(x):
        for j in range(y):
            print(str(lst[i][j]).rjust(len(str(x*y))), end=' ')
        print()


row = int(input('Введите количество строк: '))
columns = int(input('Введите количество столбцов: '))
print_operation_table(lambda x, y: x * y, row, columns)

## №3

#def print_operation_table(operation, num_rows=6, num_columns=6):
#    a = [[operation(i, j) for j in range(1, num_columns + 1)] for i in range(1, num_rows + 1)]
#    for i in a:
 #       print(*[f"{x:>3}" for x in i])


#print_operation_table(lambda x, y: x * y)